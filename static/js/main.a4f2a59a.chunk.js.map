{"version":3,"sources":["component/fullpage/Fullpage.js","component/TitelAndIcons/TitleAndIcons.js","component/AbuteSection/AbuteSection.js","component/SkillCart/SkillCart.js","component/SkillSection/SkillSection.js","component/snowstrom.js","component/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","TitleAndIcons","name","id","bgColor","data","title","subtitle","Object","keys","links","map","icon","key","url","style","height","width","AbuteSection","section","items","p","content","SkillCart","skill","alt","class","logo","SkillSection","cart","Snow","Navigation","state","homecolor","aboutcolor","skillcolor","color","onMouseOver","setState","onMouseOut","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","App","colorFitst","handleClick","bind","condition","onClick","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4f2a59a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Fullpage.css'\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ``}`}>\r\n                { children }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Fullpage;","import React, {Component} from 'react';\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport data from '../../data.json';\r\nimport Fullpage from '../fullpage/Fullpage.js';\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport './TitleAndIcons.css';\r\n\r\nclass TitleAndIcons extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"title\" className=\"element\">\r\n                <Fullpage\r\n                id=\"FirstSection\" \r\n                className={this.props.bgColor ? 'first color-first' : 'first color-first-2'}\r\n            >\r\n                    <h1>{data.title}</h1>\r\n                    <h2>{data.subtitle}</h2>\r\n                    <div className=\"contaner-icon\">\r\n                    {\r\n                        Object.keys(data.links).map(icon => {\r\n                            return(\r\n                                <SocialIcon key={\"icon\" + icon} className=\"icons\" url={data.links[icon]}    style={{ height: 60, width: 60 }}\r\n                                />\r\n                            )                        \r\n                        })\r\n                    }\r\n                    </div>\r\n                </Fullpage>\r\n            </Element>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TitleAndIcons;","import React, {Component} from 'react';\r\nimport data from '../../data.json';\r\nimport Fullpage from '../fullpage/Fullpage.js';\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport './AbuteSection.css'\r\nclass AbuteSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"abute\" className=\"element\">\r\n                <Fullpage \r\n                    id=\"SecondSection\"\r\n                    className={this.props.bgColor ? 'color-secend' : 'color-secend-2'}\r\n                >\r\n                    <h2>{data.section[0].title}</h2>\r\n                    <div className=\"text\">\r\n                    {\r\n                        data.section[0].items.map(p => {\r\n                            return(\r\n                                <p key={\"section\"+p} >{p.content}</p>\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n                </Fullpage>\r\n            </Element>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AbuteSection;","import React, {Component} from 'react';\r\nimport './SkillCart.css'\r\n\r\nclass SkillCart extends Component {\r\n    render() {\r\n        const { skill } = this.props;\r\n        return (\r\n            <div className=\"item-cart\" title={skill.content.alt}>\r\n                <h5>{skill.content.title}</h5>\r\n                <i class={skill.content.logo}></i>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillCart;","import React, {Component} from 'react';\r\nimport data from '../../data.json';\r\nimport Fullpage from '../fullpage/Fullpage.js';\r\nimport SkillCart from '../SkillCart/SkillCart';\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport './SkillSection.css'\r\nclass SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"skill\" className=\"element\">\r\n                <Fullpage \r\n                    id=\"ThirdSection\"\r\n                    className={this.props.bgColor ? 'three color-three' : 'three color-three-2'}\r\n                >\r\n                    <h2>{data.section[1].title}</h2>\r\n                    <div className=\"carts\">\r\n                    {\r\n                        data.section[1].items.map(cart => {\r\n                            return(\r\n                                <SkillCart skill={cart} />\r\n                            )\r\n                        })\r\n                    }\r\n                    </div>\r\n                </Fullpage>\r\n            </Element>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SkillSection;","import React, { Component } from 'react';\r\nimport SnowStorm from 'react-snowstorm';\r\n\r\nclass Snow extends Component {\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<SnowStorm />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Snow;","import React, {Component} from 'react';\r\nimport { Link } from \"react-scroll\";\r\nimport { FaMagic } from 'react-icons/fa';\r\n\r\nimport './Navigation.css';\r\n\r\nclass Navigation extends Component {\r\n    state = {\r\n        homecolor: \"black\",\r\n        aboutcolor: \"black\",\r\n        skillcolor: \"black\",\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navigation\" id=\"navigation\">\r\n                <ul className=\"menu\">\r\n                    <div className=\"links\">\r\n                        <li className=\"menu-item\"\r\n                            style={{\r\n                                color: this.state.homecolor,\r\n                            }}\r\n                            onMouseOver={() => {\r\n                            this.setState({\r\n                                homecolor: this.state.homecolor === \"black\" ? \"white\" : \"black\",\r\n                            });\r\n                            }}\r\n                            onMouseOut={() => {\r\n                            this.setState({\r\n                                homecolor: this.state.homecolor === \"black\" ? \"white\" : \"black\",\r\n                            });\r\n                            }} \r\n                        >\r\n                            <Link\r\n                                activeClass=\"active\"\r\n                                to=\"title\"\r\n                                spy={true}\r\n                                smooth={true}\r\n                                offset={50}\r\n                                duration={500}\r\n                                onSetActive={this.handleSetActive}\r\n                            >\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"menu-item\"\r\n                            style={{\r\n                                color: this.state.aboutcolor,\r\n                            }}\r\n                            onMouseOver={() => {\r\n                            this.setState({\r\n                                aboutcolor:\r\n                                this.state.aboutcolor === \"black\" ? \"white\" : \"black\",\r\n                            });\r\n                            }}\r\n                            onMouseOut={() => {\r\n                            this.setState({\r\n                                aboutcolor:\r\n                                this.state.aboutcolor === \"black\" ? \"white\" : \"black\",\r\n                            });\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                activeClass=\"active\"\r\n                                to=\"abute\"\r\n                                spy={true}\r\n                                smooth={true}\r\n                                offset={50}\r\n                                duration={500}\r\n                                onSetActive={this.handleSetActive}\r\n                                >\r\n                                about\r\n                            </Link>\r\n                            \r\n                        </li>\r\n                        <li className=\"menu-item\"\r\n                            style={{\r\n                            color: this.state.skillcolor,\r\n                            }}\r\n                            onMouseOver={() => {\r\n                            this.setState({\r\n                                skillcolor:\r\n                                this.state.skillcolor === \"black\" ? \"white\" : \"black\",\r\n                            });\r\n                            }}\r\n                            onMouseOut={() => {\r\n                            this.setState({\r\n                                skillcolor:\r\n                                this.state.skillcolor === \"black\" ? \"white\" : \"black\",\r\n                            });\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                activeClass=\"active\"\r\n                                to=\"skill\"\r\n                                spy={true}\r\n                                smooth={true}\r\n                                offset={50}\r\n                                duration={500}\r\n                                onSetActive={this.handleSetActive}\r\n                            >\r\n                                skill\r\n\r\n                            </Link>\r\n                        </li>\r\n                    </div>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, {Component} from 'react';\r\nimport TitleAndIcons from './component/TitelAndIcons/TitleAndIcons';\r\nimport AbuteSection from './component/AbuteSection/AbuteSection';\r\nimport SkillSection from './component/SkillSection/SkillSection';\r\nimport Snow from './component/snowstrom';\r\nimport Navigation from './component/Navigation/Navigation';\r\nimport { FaMagic } from 'react-icons/fa';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {    \r\n    super(props)\r\n    this.state = {\r\n      colorFitst: true,\r\n    }\r\n    this.handleClick = this.handleClick.bind(this)\r\n  }\r\n\r\n    handleClick() {\r\n    this.setState({\r\n      condition: !this.state.condition,\r\n      colorFitst: !this.state.colorFitst,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Snow/>\r\n        <div className=\"header\">\r\n          <FaMagic \r\n            className=\"magic\"\r\n            onClick={() => this.handleClick() }\r\n          ></FaMagic>\r\n          <Navigation/>\r\n        </div>\r\n        <TitleAndIcons bgColor={this.state.colorFitst}></TitleAndIcons>\r\n        <AbuteSection bgColor={this.state.colorFitst}></AbuteSection>\r\n        <SkillSection bgColor={this.state.colorFitst}></SkillSection>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}